if (self.CavalryLogger) { CavalryLogger.start_js(["SrGHy"]); }

__d("react-relay-deprecated/classic/mutation/RelayMutationQuery",["invariant","react-relay-deprecated/classic/interface/RelayNodeInterface","react-relay-deprecated/classic/query/RelayQuery","react-relay-deprecated/classic/route/RelayMetaRoute","react-relay-deprecated/classic/store/RelayRecord","react-relay-deprecated/classic/traversal/flattenRelayQuery","react-relay-deprecated/classic/traversal/intersectRelayQuery","react-relay-deprecated/classic/mutation/getRangeBehavior","react-relay-deprecated/classic/mutation/RelayOptimisticMutationUtils","forEachObject","nullthrows","relay-runtime","warning","react-relay-deprecated/classic/mutation/RelayMutationDebugPrinter","react-relay-deprecated/classic/query/serializeRelayQueryCall"],(function(a,b,c,d,e,f,g){"use strict";__p&&__p();var h=b("relay-runtime").ConnectionInterface,i=b("relay-runtime").MutationTypes;a=b("relay-runtime").RangeOperations;var j=a.REFETCH,k=b("react-relay-deprecated/classic/interface/RelayNodeInterface").ANY_TYPE,l=b("react-relay-deprecated/classic/interface/RelayNodeInterface").ID,m=b("react-relay-deprecated/classic/interface/RelayNodeInterface").TYPENAME,n={buildFragmentForFields:function(a){__p&&__p();var c=a.fatQuery,d=a.fieldIDs,e=a.tracker,f=[];b("forEachObject")(d,function(a,d){d=o(c,d);a=[].concat(a);var g=[];a.forEach(function(a){g.push.apply(g,e.getTrackedChildrenForID(a))});a=d.clone(g);var h=null;a&&(h=b("react-relay-deprecated/classic/traversal/intersectRelayQuery")(a,d),h&&f.push(h))});return p(c,f)},buildFragmentForEdgeDeletion:function(a){__p&&__p();var c=a.fatQuery,d=a.connectionName,e=a.parentID,f=a.parentName;a=a.tracker;var g=o(c,f);u(g,f,d);var h=[];a=g.clone(a.getTrackedChildrenForID(e));if(a){e=function(a){return a.getSchemaName()===d};a=b("react-relay-deprecated/classic/traversal/intersectRelayQuery")(a,g,e);a&&(u(a,f,d),h.push(a))}return p(c,h)},buildFragmentForEdgeInsertion:function(a){__p&&__p();var c=a.fatQuery,d=a.connectionName,e=a.parentID,f=a.edgeName,g=a.parentName,h=a.rangeBehaviors;a=a.tracker;var i=[],k={};a=a.getTrackedChildrenForID(e);var l=[];a.forEach(function(a){l.push.apply(l,v(a,d))});if(l.length){t(g,d,l[0]);var m=[];l.forEach(function(a){var c=v(a,"edges");if(!c.length)return;var d=a.getRangeBehaviorCalls();d=b("react-relay-deprecated/classic/mutation/getRangeBehavior")(h,d);d&&d!==j?c.forEach(function(a){m.push.apply(m,a.getChildren())}):(b("warning")(d===j,"RelayMutation: The connection `%s` on the mutation field `%s` that corresponds to the ID `%s` did not match any of the `rangeBehaviors` specified in your RANGE_ADD config. This means that the entire connection will be refetched. Configure a range behavior for this mutation in order to fetch only the new edge and to enable optimistic mutations or use `refetch` to squelch this warning.",a.getStorageKey(),g,e),k[a.getShallowHash()]=!0)});m.length&&i.push(r(e,f,m))}if(g!=null){f=o(c,g);u(f,g,d);a=f.clone(a);if(a){var n=function(a){return a.getSchemaName()===d&&!Object.prototype.hasOwnProperty.call(k,a.getShallowHash())};a=b("react-relay-deprecated/classic/traversal/intersectRelayQuery")(a,f,n);a&&i.push(a)}}return p(c,i)},buildFragmentForOptimisticUpdate:function(a){var c=a.response;a=a.fatQuery;c=b("react-relay-deprecated/classic/mutation/RelayOptimisticMutationUtils").inferRelayFieldsFromData(c);return p(a,c)},buildQueryForOptimisticUpdate:function(a){var c=a.fatQuery,d=a.mutation;a=a.response;a=[b("nullthrows")(n.buildFragmentForOptimisticUpdate({response:a,fatQuery:c}))];return b("react-relay-deprecated/classic/query/RelayQuery").Mutation.build("OptimisticQuery",c.getType(),d.calls[0].name,null,a,d.metadata)},buildQuery:function(a){__p&&__p();var c=a.configs,d=a.fatQuery,e=a.input,f=a.mutationName,j=a.mutation,k=a.tracker;a=h.get();a=a.CLIENT_MUTATION_ID;var m=[b("react-relay-deprecated/classic/query/RelayQuery").Field.build({fieldName:a,type:"String",metadata:{isRequisite:!0}})];c.forEach(function(a){__p&&__p();switch(a.type){case i.REQUIRED_CHILDREN:var c=a.children.map(function(a){return b("react-relay-deprecated/classic/query/RelayQuery").Fragment.create(a,b("react-relay-deprecated/classic/route/RelayMetaRoute").get("$buildQuery"),{})});m=m.concat(c);break;case i.RANGE_ADD:m.push(n.buildFragmentForEdgeInsertion({connectionName:a.connectionName,edgeName:a.edgeName,fatQuery:d,parentID:a.parentID,parentName:a.parentName,rangeBehaviors:s(a.rangeBehaviors),tracker:k}));break;case i.RANGE_DELETE:case i.NODE_DELETE:c=n.buildFragmentForEdgeDeletion({connectionName:a.connectionName,fatQuery:d,parentID:a.parentID,parentName:a.parentName,tracker:k});m.push(c);c=Array.isArray(a.deletedIDFieldName)?a.deletedIDFieldName.concat(l):[a.deletedIDFieldName];c=q(c,d);m.push(c);break;case i.FIELDS_CHANGE:m.push(n.buildFragmentForFields({fatQuery:d,fieldIDs:a.fieldIDs,tracker:k}));break;default:g(0,2141,a.type,f)}});return b("react-relay-deprecated/classic/query/RelayQuery").Mutation.build(f,d.getType(),j.calls[0].name,e,m.filter(function(a){return a!=null}),j.metadata)}};function o(a,b){a=a.getFieldByStorageKey(b);a||g(0,2142,b);return a}function p(a,c){a=b("react-relay-deprecated/classic/query/RelayQuery").Fragment.build("MutationQuery",a.getType(),c);a instanceof b("react-relay-deprecated/classic/query/RelayQuery").Fragment||g(0,2143);return a}function q(a,c){a.length>0||g(0,2144);var d=b("react-relay-deprecated/classic/query/RelayQuery").Field.build({fieldName:a[a.length-1],type:"String"});for(var e=a.length-2;e>=0;e--)d=b("react-relay-deprecated/classic/query/RelayQuery").Field.build({fieldName:a[e],type:k,children:[d],metadata:{canHaveSubselections:!0}});return p(c,[d])}function r(a,c,d){var e=[b("react-relay-deprecated/classic/query/RelayQuery").Field.build({fieldName:"cursor",type:"String"}),b("react-relay-deprecated/classic/query/RelayQuery").Field.build({fieldName:m,type:"String"})];h.get().EDGES_HAVE_SOURCE_FIELD&&!b("react-relay-deprecated/classic/store/RelayRecord").isClientID(a)&&e.push(b("react-relay-deprecated/classic/query/RelayQuery").Field.build({children:[b("react-relay-deprecated/classic/query/RelayQuery").Field.build({fieldName:l,type:"String"}),b("react-relay-deprecated/classic/query/RelayQuery").Field.build({fieldName:m,type:"String"})],fieldName:"source",metadata:{canHaveSubselections:!0},type:k}));e.push.apply(e,d);a=b("react-relay-deprecated/classic/traversal/flattenRelayQuery")(b("react-relay-deprecated/classic/query/RelayQuery").Field.build({children:e,fieldName:c,metadata:{canHaveSubselections:!0},type:k}));a instanceof b("react-relay-deprecated/classic/query/RelayQuery").Field||g(0,2145);return a}function s(a){__p&&__p();if(typeof a==="function")return a;var c;b("forEachObject")(a,function(a,b){if(b!==""){a=b.slice(0,-1).split(/\)\./);a=a.sort().join(").")+(a.length?")":"");a!==b&&(c=c||[],c.push(b))}});c&&g(0,2146,c.length===1?"":"s",c.length===1?c[0]:c.length===2?c[0]+"` and `"+c[1]:c.slice(0,-1).join("`, `"),c.length>2?", and `"+c.slice(-1)+"`":"");return a}function t(a,b,c){c.isConnection()||g(0,2147,b,a?" on `"+a+"`":"")}function u(a,b,c){a=v(a,c);a.length&&t(b,c,a[0])}function v(a,c){__p&&__p();var d=[];function e(f){if(f instanceof b("react-relay-deprecated/classic/query/RelayQuery").Field&&f.getSchemaName()===c){d.push(f);return}(f===a||f instanceof b("react-relay-deprecated/classic/query/RelayQuery").Fragment)&&f.getChildren().forEach(function(a){return e(a)})}e(a);return d}e.exports=n}),null);