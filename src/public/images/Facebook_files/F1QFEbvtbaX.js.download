if (self.CavalryLogger) { CavalryLogger.start_js(["wtMbs"]); }

__d("react-relay-deprecated/classic/legacy/store/GraphQLStoreQueryResolver",["react-relay-deprecated/classic/store/readRelayQueryData","relay-runtime","warning"],(function(a,b,c,d,e,f){"use strict";__p&&__p();c=b("relay-runtime").RelayProfiler;var g=b("relay-runtime").recycleNodesInto;function a(a,b,c){this.dispose(),this.$1=c,this.$2=b,this.$3=null,this.$4=a}a.prototype.dispose=function(){this.$3&&this.$3.dispose()};a.prototype.resolve=function(a,c){__p&&__p();this.$2.getConcreteFragmentID()!==a.getConcreteFragmentID()&&b("warning")(!1,"GraphQLStoreQueryResolver: Expected `resolve` to be called with the same concrete fragment as the constructor. The resolver was created with fragment `%s` but resolved with fragment `%s`.",this.$2.getDebugName(),a.getDebugName());if(Array.isArray(c)){b("warning")(a.isPlural(),"GraphQLStoreQueryResolver: Expected id/fragment plurality to be consistent: got plural ids for singular fragment `%s`.",a.getDebugName());var d=this.$3;d instanceof i&&(d.dispose(),d=null);d||(d=new h(this.$4,this.$1));this.$3=d;return d.resolve(a,c)}else{b("warning")(!a.isPlural(),"GraphQLStoreQueryResolver: Expected id/fragment plurality to be consistent: got a singular id for plural fragment `%s`.",a.getDebugName());d=this.$3;d instanceof h&&(d.dispose(),d=null);d||(d=new i(this.$4,this.$1));this.$3=d;return d.resolve(a,c)}};function h(a,b){this.dispose(),this.$1=b,this.$4=a}h.prototype.dispose=function(){this.$2&&this.$2.forEach(function(a){return a.dispose()}),this.$2=[],this.$3=[]};h.prototype.resolve=function(a,b){__p&&__p();var c=this.$3,d,e=c.length,f=b.length,g=this.$2;while(g.length<f)g.push(new i(this.$4,this.$1));while(g.length>f)g.pop().dispose();e!==f&&(d=[]);for(var h=0;h<f;h++){var j=g[h].resolve(a,b[h]);(d||h>=e||j!==c[h])&&(d=d||c.slice(0,h),d.push(j))}d&&(this.$3=d);return this.$3};function i(a,b){this.dispose(),this.$1=b,this.$6=a,this.$7={}}i.prototype.dispose=function(){this.$8&&this.$8.remove(),this.$3=!1,this.$2=null,this.$4=null,this.$5=null,this.$8=null,this.$7={}};i.prototype.resolve=function(a,b){__p&&__p();var c=this.$2,d=this.$5,e=this.$4,f;if(c!=null&&d!=null&&this.$9(d)===this.$9(b))if(d!==b||this.$3||!a.isEquivalent(c)){d=this.$10(a,b);c=d[0];f=d[1];c=g(e,c)}else c=e;else{d=this.$10(a,b);c=d[0];f=d[1]}if(e!==c){this.$8&&(this.$8.remove(),this.$8=null);if(f){f[b]=!0;d=this.$6.getChangeEmitter();this.$8=d.addListenerForIDs(Object.keys(f),this.$11.bind(this));this.$7=f}this.$5=b;this.$4=c}this.$3=!1;this.$2=a;return this.$4};i.prototype.$9=function(a){return this.$6.getRangeData().getCanonicalClientID(a)};i.prototype.$11=function(){this.$3||(this.$3=!0,this.$1())};i.prototype.$10=function(a,c){a=b("react-relay-deprecated/classic/store/readRelayQueryData")(this.$6,a,c);c=a.data;a=a.dataIDs;return[c,a]};c.instrumentMethods(a.prototype,{resolve:"GraphQLStoreQueryResolver.resolve"});e.exports=a}),null);