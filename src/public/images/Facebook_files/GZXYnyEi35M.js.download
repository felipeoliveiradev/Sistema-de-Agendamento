if (self.CavalryLogger) { CavalryLogger.start_js(["YNoPF"]); }

__d("react-relay-deprecated/classic/query/RelayQueryPath",["invariant","react-relay-deprecated/classic/interface/RelayNodeInterface","react-relay-deprecated/classic/store/RelayClassicRecordState","react-relay-deprecated/classic/store/RelayRecord","react-relay-deprecated/classic/query/forEachRootCallArg","react-relay-deprecated/classic/query/RelayQuery","relay-runtime","warning"],(function(a,b,c,d,e,f,g){"use strict";__p&&__p();var h=b("relay-runtime").ConnectionInterface,i=b("react-relay-deprecated/classic/interface/RelayNodeInterface").ID,j=b("react-relay-deprecated/classic/interface/RelayNodeInterface").ID_TYPE,k=b("react-relay-deprecated/classic/interface/RelayNodeInterface").NODE,l=b("react-relay-deprecated/classic/interface/RelayNodeInterface").NODE_TYPE,m=b("react-relay-deprecated/classic/interface/RelayNodeInterface").TYPENAME,n=b("react-relay-deprecated/classic/query/RelayQuery").Field.build({fieldName:i,type:"String"}),o=b("react-relay-deprecated/classic/query/RelayQuery").Field.build({fieldName:m,type:"String"}),p={type:"rootRecord"},q={getRootRecordPath:function(){return p},createForID:function(a,c,d){b("react-relay-deprecated/classic/store/RelayRecord").isClientID(a)&&g(0,774,a);return{dataID:a,name:c,routeName:d||"$RelayQuery",type:"node"}},create:function(a){if(a.getFieldName()===k){var b=a.getIdentifyingArg();if(b&&typeof b.value==="string")return{dataID:b.value,name:a.getName(),routeName:a.getRoute().name,type:"node"}}return{root:a,type:"root"}},getPath:function(a,c,d){if(d==null||b("react-relay-deprecated/classic/store/RelayRecord").isClientID(d))return{node:c,parent:a,type:"client"};else if(a.type==="node"&&a.dataID===d)return a;else return{dataID:d,name:q.getName(a),routeName:q.getRouteName(a),type:"node"}},isRootPath:function(a){return a.type==="node"||a.type==="root"},getParent:function(a){a.type==="client"||g(0,779);return a.parent},getName:function(a){while(a.type==="client")a=a.parent;if(a===p)return"RootRecordPath";else if(a.type==="root")return a.root.getName();else if(a.type==="node")return a.name;else g(0,775,a)},getRouteName:function(a){while(a.type==="client")a=a.parent;if(a===p)return"$RelayQueryPath";else if(a.type==="root")return a.root.getRoute().name;else if(a.type==="node")return a.routeName;else g(0,776,a)},getQuery:function(a,c,d){__p&&__p();var e=d,f,j=h.get();j=j.EDGES;while(c.type==="client"){var k=c.node;if(k instanceof b("react-relay-deprecated/classic/query/RelayQuery").Field){var l=k.getSchemaName();b("warning")(!f||f!==j||!k.isConnection(),"RelayQueryPath.getQuery(): Cannot generate accurate query for path with connection `%s`. Consider adding an `id` field to each `node` to make them refetchable.",l);f=l}l=k instanceof b("react-relay-deprecated/classic/query/RelayQuery").Field?k.getInferredPrimaryKey():i;l?e=k.clone([e,k.getFieldByStorageKey(l),k.getFieldByStorageKey(m)]):e=k.clone([e]);c=c.parent}c.type!=="rootRecord"||g(0,777);l=c.type==="root"?c.root:r(c);k=[e,l.getFieldByStorageKey(i),l.getFieldByStorageKey(m)];j=s(a,l,k);e=l.cloneWithRoute(j,d.getRoute());e instanceof b("react-relay-deprecated/classic/query/RelayQuery").Root||g(0,778,q.getName(c));return e}};function r(a){return b("react-relay-deprecated/classic/query/RelayQuery").Root.build(a.name,k,a.dataID,[n,o],{identifyingArgName:i,identifyingArgType:j,isAbstract:!0,isDeferred:!1,isPlural:!1},l,a.routeName)}function s(a,c,d){__p&&__p();var e=[];d.forEach(function(a){a&&e.push(a)});if(!c.isAbstract())return e;var f=[];b("react-relay-deprecated/classic/query/forEachRootCallArg")(c,function(a){a=a.identifyingArgKey;f.push(a)});d=f[0];d=a.getDataID(c.getStorageKey(),d);var g=d&&a.getType(d);if(g!=null)return[b("react-relay-deprecated/classic/query/RelayQuery").Fragment.build(c.getName(),g,e)];else{c=d!=null?a.getRecordState(d):b("react-relay-deprecated/classic/store/RelayClassicRecordState").UNKNOWN;b("warning")(!1,"RelayQueryPath: No typename found for %s record `%s`. Generating a possibly invalid query.",c.toLowerCase(),d);return e}}e.exports=q}),null);