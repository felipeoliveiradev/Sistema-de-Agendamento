if (self.CavalryLogger) { CavalryLogger.start_js(["gToAh"]); }

__d("react-relay-deprecated/classic/network/RelayNetworkLayer",["invariant","Promise","react-relay-deprecated/classic/util/throwFailedPromise","react-relay-deprecated/classic/network/RelayQueryRequest","relay-runtime","resolveImmediate","warning"],(function(a,b,c,d,e,f,g){"use strict";__p&&__p();var h=b("relay-runtime").RelayProfiler;function a(){this.$2=null,this.$3=null,this.$4=[]}a.prototype.injectDefaultImplementation=function(a){this.$1&&b("warning")(!1,"RelayNetworkLayer: Call received to injectDefaultImplementation(), but a default layer was already injected."),this.$1=a};a.prototype.injectImplementation=function(a){this.$2&&b("warning")(!1,"RelayNetworkLayer: Call received to injectImplementation(), but a layer was already injected."),this.$2=a};a.prototype.addNetworkSubscriber=function(a,b){var c=this.$4.length;this.$4.push({queryCallback:a,mutationCallback:b});return{remove:function(){delete this.$4[c]}.bind(this)}};a.prototype.sendMutation=function(a){var c=this.$5();this.$4.forEach(function(b){b=b.mutationCallback;b&&b(a)});c=c.sendMutation(a);c&&b("react-relay-deprecated/classic/util/throwFailedPromise")(b("Promise").resolve(c))};a.prototype.sendQueries=function(a){i(a);var c=this.$5();this.$4.forEach(function(b){var c=b.queryCallback;c&&a.forEach(function(a){c(a)})});c=c.sendQueries(a);c&&b("react-relay-deprecated/classic/util/throwFailedPromise")(b("Promise").resolve(c))};a.prototype.supports=function(){var a=this.$5();return a.supports.apply(a,arguments)};a.prototype.$5=function(){var a=this.$2||this.$1;a||g(0,5778);return a};a.prototype.fetchRelayQuery=function(a){var c=this.$3||[];this.$3||(this.$3=c,b("resolveImmediate")(function(){this.$3=null,this.sendQueries(c)}.bind(this)));a=new(b("react-relay-deprecated/classic/network/RelayQueryRequest"))(a);c.push(a);return a.getPromise()};function i(a){var b=h.profile("fetchRelayQuery");a.forEach(function(a){var c=h.profile("fetchRelayQuery.query",a.getQuery().getName()),d=function(){c.stop(),b&&(b.stop(),b=null)};a.getPromise().then(d,d)["catch"](function(a){setTimeout(function(){throw a},0)})})}h.instrumentMethods(a.prototype,{sendMutation:"RelayNetworkLayer.sendMutation",sendQueries:"RelayNetworkLayer.sendQueries"});e.exports=a}),null);