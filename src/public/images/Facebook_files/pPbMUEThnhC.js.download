if (self.CavalryLogger) { CavalryLogger.start_js(["QP\/qk"]); }

__d("react-relay-deprecated/classic/container/RelayRootContainer",["React","react-relay-deprecated/classic/store/RelayStore","react-relay-deprecated/classic/container/RelayPropTypes","react-relay-deprecated/classic/container/RelayRenderer","prop-types"],(function(a,b,c,d,e,f){"use strict";__p&&__p();function a(a){__p&&__p();var c=a.Component,d=a.forceFetch,e=a.onReadyStateChange,f=a.renderFailure,g=a.renderFetched,h=a.renderLoading,i=a.route;a=a.shouldFetch;return b("React").createElement(b("react-relay-deprecated/classic/container/RelayRenderer"),{Container:c,forceFetch:d,onReadyStateChange:e,queryConfig:i,environment:b("react-relay-deprecated/classic/store/RelayStore"),shouldFetch:a,render:function(a){__p&&__p();var d=a.done,e=a.error,i=a.props,j=a.retry;a=a.stale;if(e){if(f)return f(e,j)}else if(i)if(g)return g(i,{done:d,stale:a});else return b("React").createElement(c,i);else if(h)return h();return void 0}})}a.propTypes={Component:b("react-relay-deprecated/classic/container/RelayPropTypes").Container,forceFetch:b("prop-types").bool,onReadyStateChange:b("prop-types").func,renderFailure:b("prop-types").func,renderFetched:b("prop-types").func,renderLoading:b("prop-types").func,route:b("react-relay-deprecated/classic/container/RelayPropTypes").QueryConfig.isRequired,shouldFetch:b("prop-types").bool};e.exports=a}),null);